import os
import time
import random
import requests

# ========= 随机延时，避免固定时间签到 =========
delay = random.randint(0, 1800)  # 随机延时 0~1800 秒（0~30 分钟）
print(f"随机延时 {delay} 秒后开始签到...")
time.sleep(delay)


# ========= 从 GitHub Actions 读取环境变量 =========
USER = os.getenv("USER")
PASS = os.getenv("PASS")
NS_COOKIE = os.getenv("NS_COOKIE")

TG_BOT_TOKEN = os.getenv("TG_BOT_TOKEN")
TG_USER_ID = os.getenv("TG_USER_ID")
TG_THREAD_ID = os.getenv("TG_THREAD_ID")


# ========= NodeSeek 签到逻辑 =========
def nodeseek_signin(user, password, cookie):
    try:
        headers = {
            "User-Agent": "Mozilla/5.0",
            "Cookie": cookie
        }

        # 这里假设签到接口是这个（请根据你原始脚本的 API 调整）
        url = "https://www.nodeseek.com/api/signin"

        resp = requests.post(url, headers=headers, data={"username": user, "password": password}, timeout=15)

        if resp.status_code == 200:
            return f"账号 {user} 签到成功：{resp.text}"
        else:
            return f"账号 {user} 签到失败，状态码：{resp.status_code}"

    except Exception as e:
        return f"账号 {user} 签到出错：{str(e)}"


# ========= Telegram 推送 =========
def send_telegram(msg):
    if not TG_BOT_TOKEN or not TG_USER_ID:
        print("未配置 Telegram 推送，跳过。")
        return

    url = f"https://api.telegram.org/bot{TG_BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": TG_USER_ID,
        "text": msg,
        "parse_mode": "HTML"
    }

    if TG_THREAD_ID:
        payload["message_thread_id"] = TG_THREAD_ID

    try:
        requests.post(url, data=payload, timeout=10)
    except Exception as e:
        print("推送 Telegram 失败：", e)


# ========= 主逻辑 =========
if __name__ == "__main__":
    result = nodeseek_signin(USER, PASS, NS_COOKIE)
    print(result)
    send_telegram(result)
